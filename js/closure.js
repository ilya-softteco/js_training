/* Представьте, что у вас есть функция, которая создает и возвращает другую функцию.
Эта внутренняя функция имеет доступ ко всем переменным и параметрам внешней функции, даже после того,
как внешняя функция завершила свое выполнение. Это и есть замыкание.*/

function makeGreeting() {
    var name = "Вася";

    function sayHello() {
        console.log("Привет, " + name);
    }

    return sayHello;
}


const greetVasya = makeGreeting();
greetVasya(); // Выведет "Привет, Вася"

/* В этом примере, greetVasya — это ссылка на функцию sayHello,
 которая была создана при выполнении makeGreeting. Функция sayHello все еще имеет
 доступ к переменной name, которая была объявлена в makeGreeting, даже после того,
 как makeGreeting завершила свое выполнение. Это возможно благодаря замыканию.*/